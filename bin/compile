#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_SOURCES_LIST="$BUILD_DIR/sources.list"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR -o dir::etc::sourcelist=$APT_SOURCES_LIST"


topic "Adding git-core PPA"
cp /etc/apt/sources.list $APT_SOURCES_LIST
echo "deb http://ppa.launchpad.net/git-core/ppa/ubuntu xenial main" >> $APT_SOURCES_LIST

topic "Cleaning apt caches"
apt-get $APT_OPTIONS --allow-unauthenticated clean | indent

topic "Updating apt caches"
apt-get $APT_OPTIONS --allow-unauthenticated update | indent

apt-cache $APT_OPTIONS madison git

topic "Fetching .debs for git"
apt-get $APT_OPTIONS --allow-unauthenticated -y --force-yes --no-install-recommends -d install --reinstall git=1:2.16.1-0ppa1~ubuntu16.04.1 | indent

mkdir -p $BUILD_DIR/.apt

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_apt_ffmpeg.sh
export PATH="\$HOME/.apt/opt/ffmpeg/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/opt/ffmpeg/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/opt/ffmpeg/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/opt/ffmpeg/include:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/opt/ffmpeg/lib/pkgconfig:\$PKG_CONFIG_PATH"
EOF

export PATH="$BUILD_DIR/.apt/opt/ffmpeg/bin:$PATH"
export LD_LIBRARY_PATH="$BUILD_DIR/.apt/opt/ffmpeg/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$BUILD_DIR/.apt/opt/ffmpeg/lib:$LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/.apt/opt/ffmpeg/include:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="$BUILD_DIR/.apt/opt/ffmpeg/lib/pkgconfig:$PKG_CONFIG_PATH"

# give environment to later buildpacks
export | grep -E -e ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)='  > "$LP_DIR/export"
